services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: user_service_db
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user_service_network

  # Django Application
  web:
    build: .
    container_name: user_service_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - SECRET_KEY_FILE=/run/secrets/django_secret_key
    secrets:
      - db_password
      - django_secret_key
    depends_on:
      db:
        condition: service_healthy
    networks:
      - user_service_network

volumes:
  postgres_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  user_service_network:
    driver: bridge

secrets:
  db_password:
    file: ./secrets/db_password.txt
  django_secret_key:
    file: ./secrets/django_secret_key.txt
